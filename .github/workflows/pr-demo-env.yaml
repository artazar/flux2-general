name: Bring up demo env

on:
  pull_request:
    branches:
      - main
    types:
      - opened
      - edited
      - synchronize
  issue_comment:
    types:
      - created
  workflow_dispatch:

jobs:
  check-pr:
    runs-on: ubuntu-latest
    outputs:
      check: ${{ steps.check.outputs.triggered }}
      feature_name: ${{ steps.feature_name.outputs.feature_name }}
    steps:
      - uses: khan/pull-request-comment-trigger@v1.1.0
        id: check
        with:
          trigger: '@deploy'
          reaction: rocket
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'

      - name: Dump github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Dump comment body
        id: feature_name
        if: steps.check.outputs.triggered == 'true'
        env:
          BODY: ${{ steps.check.outputs.comment_body }}
        run: |
          NAME=$(echo $BODY | sed "s|@deploy ||" | sed "s| |_|g" | cut -c 1-16)
          echo "feature_name=$NAME" > $GITHUB_OUTPUT

  demo-env:
    needs: check-pr
    if: needs.check-pr.outputs.check == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout Flux repo
        uses: actions/checkout@master
        with:
          ref: main
          repository: ${{ github.repository_owner }}/flux2-general
          token: ${{ secrets.TOKEN_RW }}

      - name: Dump feature name
        env:
          NAME: ${{ needs.check-pr.outputs.feature_name }}
        run: echo $NAME

      - name: Create PR manifests
        env:
          NAME: ${{ needs.check-pr.outputs.feature_name }}
        run: |
          export KS_PATH="apps/demoapp-work/flux-ks-$NAME.yaml"

          yq -i '.resources += [ env(KS_PATH) ]' clusters/demo-000/kustomization.yaml

          echo '--- 
          apiVersion: kustomize.toolkit.fluxcd.io/v1beta2
          kind: Kustomization
          metadata:
            name: demoapp-work-$NAME
            namespace: flux-system
          spec:
            interval: 60m0s
            sourceRef:
              kind: GitRepository
              name: flux-system
            path: ./clusters/demo-000/apps/demoapp-work/$NAME
            prune: true
          ' | envsubst > ${KS_PATH}

          cp -rf ./clusters/demo-000/apps/demoapp-work/PR ./clusters/demo-000/apps/demoapp-work/$NAME
          find ./clusters/demo-000/apps/demoapp-work/$NAME -type f -exec /bin/sh -c 'envsubst < $1 > $1.tmp && mv $1.tmp $1' -- {} \;

      - name: Update application version
        id: commit_version
        env:
          NAME: ${{ needs.check-pr.outputs.feature_name }}
        run: | 
          # Make a git commit
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
          git status
          git add .
          git commit -m "Add $NAME namespace for demoapp-work at demo-000 cluster"
          git status
          git push origin main
          git tag "deploy-$NAME"
          git push origin main --tags

      - uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: format("%s-%s", "deploy", needs.check-pr.outputs.feature_name)

      - uses: actions/github-script@v3
        env:
          NAME: ${{ needs.check-pr.outputs.feature_name }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `$NAME namespace has been deployed, access the app at https://demoapp-work-$NAME.example.com`
            })
